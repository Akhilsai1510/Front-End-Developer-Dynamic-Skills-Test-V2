<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Patient Data Dashboard</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <header>
    <h1>Patient Data - Jessica Taylor</h1>
  </header>

  <section id="patient-info">
    <div>
      <h2>Blood Pressure Data</h2>
      <canvas id="bloodPressureChart"></canvas> <!-- This is where the chart will go -->
    </div>
  </section>

  <!-- Link to Chart.js Library -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <!-- Link to Custom JavaScript File -->
  <script src="script.js"></script>
</body>
</html>

/* General body styles */
body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f4f4f4;
}

/* Header styles */
header {
  background-color: #333;
  color: white;
  text-align: center;
  padding: 20px;
}

/* Patient data section styles */
#patient-info {
  margin: 20px;
  padding: 20px;
  background-color: white;
  border-radius: 8px;
}

canvas {
  width: 100%;
  height: 300px; /* This will be the height of the chart */
}

// Make the API call to fetch patient data
fetch('https://api.example.com/patient-data')  // Use the correct URL from the API documentation
  .then(response => response.json())  // Convert the response to JSON
  .then(data => {
    // Find data specifically for Jessica Taylor
    const patientData = data.find(patient => patient.name === "Jessica Taylor");

    // Create the chart using the data
    const ctx = document.getElementById('bloodPressureChart').getContext('2d');
    const bloodPressureChart = new Chart(ctx, {
      type: 'line',  // Line chart to show blood pressure over the years
      data: {
        labels: ['2020', '2021', '2022', '2023'],  // Years for the X-axis
        datasets: [{
          label: 'Blood Pressure',
          data: patientData.bloodPressure,  // Array of blood pressure data for Jessica
          borderColor: 'rgba(75, 192, 192, 1)',  // Line color
          fill: false  // Don't fill the area under the line
        }]
      },
      options: {
        responsive: true,  // Make the chart responsive
        scales: {
          x: { beginAtZero: true },  // Start X-axis from zero
          y: { beginAtZero: true }   // Start Y-axis from zero
        }
      }
    });
  })
  .catch(error => console.error('Error fetching data:', error));  // Handle errors

